data.frame(filter(mean.transcript.df,gene=='fadA'))
data.frame(filter(mean.transcript.df,gene=='fadL'))
data.frame(filter(mean.transcript.df,gene=='fadR'))
data.frame(filter(mean.transcript.df,gene=='puuR'))
data.frame(filter(mean.transcript.df,gene=='purR'))
data.frame(filter(mean.transcript.df,gene=='fadB'))
sleuth_live(so)
data.frame(filter(mean.transcript.df,gene=='fadB'))
sleuth_live(so)
head(wt.results)
head(lrt.results)
sleuth_live(so)
sleuth_live(so)
head(wt.results,10)
head(wt.results)
head(wt.results,10)
head(wt.results,15)
head(wt.results,20)
sleuth_live(so)
so <- NULL
so <- NULL
filter(evolved.mutations,gene=='gltA')
filter(evolved.mutations,Gene=='gltA')
filter(evolved.mutations,Gene=='gltA') arrange(Position)
filter(evolved.mutations,Gene=='gltA') %>% arrange(Position)
evolved.mutations %>% filter(Mutation==nonsynonymous) %>% group_by(Position) %>% summarize(count=n())
evolved.mutations %>% filter(Mutation=='nonsynonymous') %>% group_by(Position) %>% summarize(count=n())
evolved.mutations %>% filter(Mutation=='nonsynonymous') %>% group_by(Position) %>% summarize(count=n()) %>% filter(count > 1)
filter(evolved.mutations,Position %in% c(2209801,2630053))
Table2
Table2
non.MOB.parallel
 Table3
filter(evolved.mutations,Gene=='arcA')
filter(evolved.mutations,Gene=='arcB')
filter(evolved.mutations,Gene=='gltA')
filter(evolved.mutations,Gene=='gltA') %>% arrange(Position)
Fig3B
clone.growth.plot
head(clone.growth)
test <- filter(clone.growth,Name=='ZDBp883')
test
plot.growth.parameters(test)
clone.growth.plot
test <- filter(clone.growth,Name=='ZDBp895')
plot.growth.parameters(test)
test
clone.growth.plot
clone.growthcurver.plot
clone.growthcurver.plot
test <- filter(clone.growth.curve.fits,Name %in% c('CZB152','CZB154'))
test
clone.growth.plot
clone.growthcurver.plot
pop.growth.plot
pop.growthcurver.plot
pop.growthcurver.plot
test <- filter(pop.growth.curve.fits,Name=='ZDBp804')
test
DM25.clone.growthcurver.plot
DM25.clone.growth.plot
clone.growth.parameter.plot
clone.growth.parameter.plot
clone.growth.parameter.plot
IS.plot
parallel.IS.plot
IS150.rate.plot
IS150.rate.plot
IS150.rate.plot
IS150.rate.plot
IS150.rate.plot
IS150.rate.plot
IS150.rate.plot
IS150.rate.plot
IS150.rate.plot
IS150.rate.plot
IS150.rate.plot
IS150.rate.plot
IS150.rate.plot
IS150.rate.plot
IS150.rate.plot
IS150.rate.plot
unique(IS.insertions$IS_element)
IS.plot
Fig6
Fig6
Fig6
Fig6
Fig3BC
install.packages('DT')
install.packages('roxygen2')
install.packages('rtracklayer')
BiocManager::install("rtracklayer")
library(rtracklayer)
quartz()
Fig8A
head(annotated.amps)
head(labeled.annotated.amps)
amp.segments
amp.segments
amp.segments <- plot.amp.segments(annotated.amps,clone.labels)
amp.segments
install.packages('ggridges')
amp.segments <- plot.amp.segments(annotated.amps,clone.labels)
amp.segments
amp.segments <- plot.amp.segments(annotated.amps,clone.labels)
amp.segments
segmentplot
amp.segments <- plot.amp.segments(annotated.amps,clone.labels)
amp.segments
segmentplot
segmentplot <- ggplot(labeled.annotated.amps,aes(x=start,
                                                   xend=end,
                                                   y=Genome,
                                                   yend=Genome,
                                                   fill=log2.copy.number.mean,
                                                   frame=Environment)) +
                                                     geom_segment(width=log2.copy.number.mean) +
    ##geom_tile(color="white",size=0.1) +
      ## draw vertical lines at genes of interest.
     ## geom_vline(linetype='dashed',
     ##            xintercept = which(levels(labeled.annotated.amps$gene) %in% c('citT','dctA','maeA'))) +
        xlab("Genomic position") +
          scale_fill_viridis(name="",option="plasma") +
            facet_wrap(~Environment,nrow=2, scales = "free_y") +
              theme_tufte(base_family='Helvetica') +
                theme(axis.ticks=element_line(size=0.1)) +
                  theme(legend.text=element_text(size=6)) +
                    guides(fill=FALSE)
segmentplot
segmentplot
segmentplot
segmentplot
head(labeled.annotated.amps)
segmentplot
segmentplot
segmentplot
segmentplot
segmentplot
segmentplot
head(labeled.annotated.amps)
filter(labeled.annotated.amps,gene %in% c('citT','dctA','maeA'))
segment.plot
segmentplot
segmentplot
segmentplot
segmentplot
segmentplot
segmentplot
segmentplot
segmentplot
segmentplot
segmentplot
segmentplot
segmentplot
segmentplot
head(annotated.amps)
annotated.amps
Fig3B 
Fig3BC
fig2A
fig2A
install.packages("RColorBrewer")
fig2A
fig2A
fig2A
fig2A
fig2A
fig2A
quartz()
fig2A
fig2B
fig2A
fig2B
fig2A
fig2A
fig2A
fig2A
fig2C
fig2A
fig2B
fig2C
fig2A
fig2B
fig2C
fig2A
fig2B
fig2C
fig2
fig2
fig2
fig2
fig2
fig2C
fig2
fig2
fig2
head(evolved.mutations)
levels(evolved.mutations$Mutation)
levels(evolved.mutations$Mutation)
levels(ltee.5K.clones$Mutation)
levels(evolved.mutations$Mutation)
levels(ltee.5K.clones$Mutation)
names(ltee.mutations)
ltee.mutations
fig2
fig2
levels(ltee.5K.clones$Mutation)
levels(evolved.mutations$Mutation)
fig2
fig2C
fig2
fig2A
fig2
fig2
ltee.5K.clones$Mutation
fig2
fig2
fig2
fig2
fig2
fig2
fig2
fig2
fig2
fig2
fig2
fig2
fig2
fig2
fig2
fig2
fig2
fig2
fig2
fig2
fig2
fig2
fig2
legend
legend
legend
fig2C
legend
fig2
fig2
)
fig2
fig2
clone.growth.summary
final.clone.growth.summary
final.clone.growth.summary$Name
warnings()
clone.bootstrap.CI
Fig3B
Fig3
Fig3
Fig3
clone.growth.plot
clone.growth.plot
clone.growth.plot
clone.growth.plot
clone.growth.plot
clone.growth.plot <- NULL
growth <- clone.growth
plot.CIs=TRUE
plot.df <- growth.plot.df
confints.df <- growth.CI
clone.growth.plot <- plot.growth.parameters(clone.growth)
clone.growth.plot
clone.growth.plot <- plot.growth.parameters(clone.growth)
clone.growth.plot
S5BFig
S5Fig
Fig4
DM0.CFU.data
head(DM0.CFU.data)
head(DM25.CFU.data)
DM25.CFU.plotA
DM25.CFU.plotA
DM0.CFU.plotA
DM0.CFU.plotA
CFU.Fig
CFU.Fig
CFU.Fig
raw.matrix.file <- raw.matrix.f
amp.matrix.file <- amp.matrix.f
ltee.matrix.file <- ltee.matrix.f
ltee.50k.labels.file <- ltee.50k.labels.f
matrix.figure
matrix.figure
raw.matrix.file <- raw.matrix.f
 amp.matrix.file <- amp.matrix.f
ltee.matrix.file <- ltee.matrix.f
ltee.50k.labels.file <- ltee.50k.labels.f
head(matrix.data)
DM0.matrix.figure
DM0.matrix.figure
DM25.matrix.figure
DM25.matrix.figure
LTEE.matrix.figure
matrix.figure
matrix.figure
matrix.data
LTEE.genes
all.genes
matrix.figure
matrix.figure
LTEE.matrix.panel
matrix.figure
matrix.figure
matrix.outfile = matrix.outf
matrix.figure
IS.plot
IS.plot
IS.plot
IS.plot
IS.plot
IS.plot
parallel.IS.plot
parallel.IS.plot
parallel.IS.plot
parallel.IS.plot
parallel.IS.plot
parallel.IS.plot
parallel.IS.plot
parallel.IS.plot
parallel.IS.plot
IS.plot
IS.plot
IS150.rate.plot
IS150.rate.plot
DM0.CFU.plotA
DM0.CFU.plotA
DM0.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA <- make.CFU.plotA(DM25.CFU.data,'CFUs in DM25 media')
DM25.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA
DM25.CFU.plotA
?theme
head(labeled.annotated.amps)
head(amps)
head(amps)
total.amp.lengths
data.frame(total.amps.lengths)
data.frame(total.amp.lengths)
total.amp.lengths
total.amp.lengths
Table3
S5BFig
head(S5BFig.plot.df)
head(S5BFig.plot.df$Parameter)
head(S3BFig.plot.df$Parameter)
head(Fig3B.plot.df$Parameter)
S8BFig
no.CI.clone.growth.plot
REL606.plot
log.REL606.plot
REL606.plot
log.REL606.plot
plot.df <- S9BFig.plot.df
confints.df <- DM25.clone.bootstrap.CI
recode.param.func <- recode.Growth.Parameter
plot.df
data.frame(plot.df)
data.frame(plot.df)
plot.df <- S9BFig.plot.df
plot.df
plot.df <- S9BFig.plot.df
plot.df
plot.df
plot.df
data.frame(plot.df)
S9BFig.plot.df
plot.df <- S9BFig.plot.df
confints.df <- DM25.clone.bootstrap.CI
plot.df2
plot.df2
recode.param.func
recode.param.func <- recode.Growth.Parameter
plot.df2
confints.df2
recode.param.func <- recode.Growth.Parameter
plot.df2
the.plot
clone.growth.plot <- plot.growth.parameters(clone.growth)
clone.growth.plot
Fig3B
parallel.dK
parallel.dN
head(evolved.mutations)
parallel.dN
parallel.dN.Table
pop.clone.labels
head(evolved.mutations)
parallel.dN.Table
all.genomes
all.genomes
promoter.mutant
dctA.AMPs
dctA.AMPs
promoter.mutant
promoter.mutant
promoter.mutant
promoter.mutant
dctA.AMPs
promoter.mutant
Table3
dctA.AMPs
promoter.mutant
dctA.AMP.promoter.mut.intersection
dctA.AMP.no.promoter.mut
promoter.mut.no.dctA.AMP
neither.dctA.AMP.nor.promoter
neither.dctA.AMP.nor.promoter
neither.dctA.AMP.nor.promoter
dctA.AMP
dctA.AMPs
neither.dctA.AMP.nor.promoter
dctA.AMP.promoter.mut.intersection
dctA.AMP.no.promoter.mut
promoter.mut.no.dctA.AMP
promoter.mut
promoter.mutant
neither.dctA.AMP.nor.promoter
pop.clone.labels
promoter.mutant
dctA.AMPs
pop.clone.labels
dctA.AMP.promoter.mut.intersection
dctA.AMP.no.promoter.mut
dctA.AMP.promoter.mut.intersection
dctA.AMP.no.promoter.mut
promoter.mut.no.dctA.AMP
neither.dctA.AMP.nor.promoter
dctA.AMPs
test <- read.csv(file.path(proj.dir,"results/amplified_genes.csv"),stringsAsFactors=FALSE)
test
head(test)
maeA.dct.amps.df
head(annotated.amps)
head(clone.labels)
maeA.dctA.amps
maeA.dctA.amps.df
arrange(maeA.dctA.amps.df,Genome)
promoter.mutant
promoter.mutant
clone.growth
IS.insertions
parallel.IS.insertions
IS.insertions
tbl(IS.insertions)
head(IS.insertions)
length(IS.insertions$Clone)
75/202
total.hit.pos
DM0.DM25.IS150.hit.pos
LTEE.MAE.IS150.hit.pos
DM0.DM25.IS150.hit.pos
parallel.IS.insertions
parallel.IS.summary
data.frame(IS.summary)
data.frame(parallel.IS.summary)
head(IS.insertions)
parallele.DM0.IS.insertions
parallel.DM0.IS.insertions
parallel.IS.summary
DM0.IS150
parallel.DM0.IS.summary
parallel.DM0.IS.summary
parallel.DM0.IS.summary
head(evolved.mutations)
filter(evolved.mutations,Gene=='yhiO')
filter(evolved.mutations,Position==3501576)
parallel.IS.summary
parallel.IS.summary
filter(evolved.mutations,Gene=='menC')
filter(evolved.mutations,Gene=='priC')
filter(evolved.mutations,Gene=='yqjA')
filter(evolved.mutations,annotation=='yhiO')
filter(evolved.mutations,Gene=='yhiO')
filter(evolved.mutations,Position>3501500 & Position < 3110000)
filter(evolved.mutations,Position>3501500 & Position < 3508000)
filter(evolved.mutations,Clone=='ZDBp901')
