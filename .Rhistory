data_n = my.data$OD420
t_max
bg_correct
log_mod
log_mod = FitLogisticSum(data_t, data_n)
log_mod = FitLogisticSum(data_t, data_n)
log_mod = FitLogisticSum(data_t, data_n)
log_mod
input.pairs
well = 'H9'
experiment='DM25-growth'
log_mod = FitLogisticSum(data_t, data_n)
log_mod = FitLogisticSum(data_t, data_n)
log_mod
log_mode
log_mod
log_mod = FitLogisticSum(data_t, data_n)
data_t = my.data$Hours
data_n = my.data$OD420
log_mod
p
k1
p[2]
k1_se
p
n0_p
DT1
DT2
t_inflection1
t_inflection2
sigma
summary(log_mod)$df
summary(log_mod)
TforN(k1,k2,n0,r1,r2,k1)
k1
A
B
k1
k2
log(0)
log(1)
labeled.plate.data <- final.growth.data
input.pairs
test = filter(gdata,Well='H9')
test = filter(gdata,Well=='H9')
head(test)
well = 'H9'
tail(input.pairs)
experiment = 'DM25-growth'
data_t = my.data$Hours
data_n = my.data$OD420
t_trim = 0
bg_correct = "min"
blank = NA
log_mod = FitLogisticSum(data_t, data_n)
log_mod = FitLogisticSum(data_t, data_n)
log_mod = FitLogisticSum(data_t, data_n)
log_mod = FitLogisticSum(data_t, data_n)
log_mod = FitLogisticSum(data_t, data_n)
log_mod = FitLogisticSum(data_t, data_n)
log_mod = FitLogisticSum(data_t, data_n)
log_mod = FitLogisticSum(data_t, data_n)
log_mod
log_mod = FitLogisticSum(data_t, data_n)
log_mod = FitLogisticSum(data_t, data_n)
matrix.data
ltee.matrix
DM0.DM25.matrix.data
raw.matri
raw.matrix
raw.matrix
merged.with.amps.matrix
head(merged.with.amps.matrix)
merged.with.amps.matrix$ZDBp875 <- NULL
merged.with.amps.matrix
merged.with.amps.matrix$ZDBp875 <- NULL
DM0.DM25.matrix.data
DM0.DM25.matrix.data
DM0.DM25.matrix.data
merged.with.amps.matrix
nrow(merged.with.amps.matrix)
ncol(DM0.DM25.matrix.data)
DM0.DM25.matrix.data
ncol(merged.with.amps.matrix)
head(merged.with.amps.matrix)
ncol(merged.with.amps.matrix)
DM0.DM25.matrix.data
DM0.DM25.matrix.data
DM0.DM25.matrix.data
sorted.genomes
sorted.genomes
sorted.genomes
matrix.data$Name
sorted.genomes
matrix.data$Name
sorted.genomes
matrix.data$Name
merged.with.amps.matrix
merged.with.amps.matrix
fig3.counts
DM0.clone.growth.data
tail(labeled.clone.growth.data)
tail(final.clone.growth.data)
head(final.clone.growth.data)
filter(final.pop.growth.data,is.na(Founder))
filter(final.pop.growth.data,is.na(Name))
filter(final.clone.growth.data,is.na(Name))
filter(final.clone.growth.data,is.na(Founder))
filter(final.clone.growth.data,is.na(Founder))
DM25.growth <- final.clone.growth.data %>% filter(Experiment=='DM25-growth')
DM25.growth
DM25.growth = DM25.growth %>% filter(Hours==0)
DM25.growth
test <- final.clone.growth.data %>% filter(Hours=20,OD420<0.2)
test <- final.clone.growth.data %>% filter(Hours==20,OD420<0.2)
test
test <- final.clone.growth.data %>% filter(Hours==20,OD420<0.1)
test
test <- final.clone.growth.data %>% filter(Hours==20,OD420<0.1,Founder==CZB151)
test <- final.clone.growth.data %>% filter(Hours==20,OD420<0.1,Founder=='CZB151')
test
Fig2A
ZDBp871
ZDBp871.comp
ZDBp871.growth.data
ZDBp871.growth.data
filter(DM0.clone.growth.data,Well=='C1')
ZDBp871.growth.data
test = filter(final.clone.growth.data,Well=='C1')
test
test = filter(DM0.clone.growth.data,Well=='C1')
test
test2 = filter(labeled.clone.growth.data,Well=='C1')
test2
test3 = filter(final.clone.growth.data,Well=='C1')
test3
ZDBp871.growth.data
ZDBp871.comp
head(ZDBp871.growth.data)
library(zoo)
install.packages('zoo')
no
quartz()
test2
test2
test2
test2
test2
test2
test2
test2
test2
test2
head(ZDBp871.growth.data)
test2
test2
test2
test2
quartz
quartz()
test3
test2
test3
quartz()
test1
test1
test1
test1
test1
test2
test1
test2
test1
test1
test1
test
test1
test1
test2
test3
test2
test1
quartz()
test1
test1
test1
test1
test1
test1
test1
test1
test1
test1
test1
test1
test1
test1
test1
test2
test1
quartz())
quartz()
test2
test3
test2
test1
test2
test1
test1
test1
test1
test1
quartz()
test1
quartz()
test1
quartz()
test2
quartz()
test3
test
max(test$d2.OD420)
min(test$d2.OD420)
test1
test2
test3
min(test$d2.OD420)
test$d2.OD420
test$d2.OD420[1]
test$d2.OD420[1] <- 0
test$d2.OD420[2] <- 0
min(test$d2.OD420)
which.min(test$d2.OD420)
test[96]
test
test[96,]
test1
test2
test1
test2
test1
test2
test3
quartz()
test2
test$d2.OD420[1] <- 0
test$d2.OD420[2] <- 0
test$d2.OD420[3] <- 0
test$d2.OD420[4] <- 0
test$d2.OD420[5] <- 0
which.min(test$d2.OD420)
test[20,]
quartz()
test
test1
test[20,]
which.min(filter(test,Experiment=='DM25-growth')$d2.OD420)
test[10,]
test[10,]$d2.OD420
which.min(filter(test,Experiment=='DM25-growth')$d2.OD420,na.rm=TRUE)
?which.min
test4 <- filter(test,Experiment=='DM25-growth')
test4
test4$OD420
test1
test1
test1
test
test1
test1
ZDBp871.growth.data
test1
test
test$OD420
test$OD420
test1
test1
test2
test3
test4 <- filter(test,Experiment=='DM25-growth')
test4$OD420
test4$d2.OD420
which.min(test4$d2.OD420)
test4[96,]
test4
test4[20,]
test4[40,]
test1
test2
test3
test1
test2
test1
test2
test1
test2
test3
test$d2.OD420
test$d.OD420
test$OD420
test1
test1
test2
test3
test2
quartz()
test1
quartz()
test3
test1
test2
test3
test2
test1
test1
test2
test3
test1
test2
test1
test1
test2
test3
test1
test2
test3
test2
test3
test1
test2
test1
test2
test1
test3
test2
test1
test1
test2
test3
test1
test1
test2
test3
test1
test2
test3
test1
test1
test2
test3
test1
test2
test3
test1
test1
test2
test3
test1
test2
test3
test1
test2
test3
test1
test2
test3
test2
test1
test1
test2
test3
test1
test1
test2
test3
test1
test2
test3
test1
test2
test3
test1
test1
test2
test3
test1
test0 
test0
test1
test2
test0
test0
test1
test2
test3
test0
test3
test0
test1
test2
test3
test0
test0
test1
test2
test3
test4
test0
final.growth.df <- final.clone.growth.data
well = 'A1'
well.df = filter(growth.rate.df,Well=well)
well.df = filter(growth.rate.df,Well==well)
summarize.well.growth(well.df)
growth.rate.df %>% split(.$Well)
growth.rate.df %>% split(.$Well)
head(growth.rate.summary)
growth.rate.summary
test.growth.summary
test.growth.summart2
test.growth.summary2
test.growth.summary
test.growth.summary
test.growth.summary
test.pop.growth.summary
test.pop.growth.summary2
test.pop.growth.summary2
test.pop.growth.summary2
test.pop.growth.summary1
test.growth.summary2
test.growth.summary
CZB151.evol.growth.summary
warnings()
growth.df <- final.clone.growth.data
unique(growth.df$Founder)
evolved.names
founder
evolved.names
test.list
class(test.list[[1]])
test.list[[1]]
test.list[1]
evolved.names
ev.name = evolved.names[1]
ev.name
logscale=FALSE
class(fig)
class(test.list[[1]])
warnings()
test.plot
fig
plot.growth.data
filter(plot.growth.data,Name==Founder)
head(growth.data)
head(growth.df)
founder
evolved.names
ev.name
plot.growth.data
filter(plot.growth.data,Name==Founder)
filter(plot.growth.data,Name==Founder)
growth.by.founder
filter(plot.growth.data,Name==founder)
test.plot
test.plot
?revalue
growth.df
head(growth.df)
test.plot
test.plot
test.plot
test.plot
test.plot
test.plot
title.string
title.string
test.plot
warnings()
test.plot
test.plot
test.plot
test.plto
test.plot
test.plot
test.plot
test.plot
test.plot
test.plot
test.plot <- plot.Fig2A(final.clone.growth.data)
test.plot
test.plot <- plot.Fig2A(final.clone.growth.data)
test.plot
test.plot <- plot.Fig2A(final.clone.growth.data)
test.plot
head(plot.growth.data)
ev.pop
title.string
title.string
head(plot.growth.data$Population)
install.packages("tidyverse")
warnings()
